- if k=2, find top 2 frequent numbers
- frequency map and bucket sort to group the high frequency nums
- freq map: 1->3, 2->2, 3->1, 4->1 
-bucket sort: 3:[1], 2[2]
TC & SC: O(n)

var topK = function(nums, k){
  let map={};
  let bucket=[];
  let result=[];

for(let i=o; i<nums.length; i++){
  if(!map[nums[i]]){
    map[nums[i]]= 1;
  } else { 
    map[nums[i]]++;
}}
for(let[nums,freq] of Object.entries(map)){
  if(!bucket[freq]){
    bucket[freq]= new Set().add(num);
  } else {
    bucket[freq]= bucket[freq].add(num);
  }}
for(let i=bucket.length-1; i>0; i--){
  if(bucket[i]) result.push(...bucket[i]);
  if(result.length ===k) break;
}
return result;
}
